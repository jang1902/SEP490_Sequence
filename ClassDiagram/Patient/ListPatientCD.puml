@startuml
interface IPatientRepository{
GetAllAsync(GetAllPatientRequest request): List<ListPatientDto>
}
interface IValidator<T>

class PatientRepository {
GetAllAsync(GetAllPatientRequest request):List<ListPatientDto>
}

class GetAllPatientUseCase {
  - _patientRepository: IPatientRepository
  - _validator: IValidator<GetAllPatientRequest>
  + ExecuteAsync(GetAllPatientRequest request): Task<PaginationResponse<List<ListPatientDto>>>
}

class GetAllPatientValidator {
  + GetAllPatientValidator()
}

class PatientController {
  - _getAllPatient: GetAllPatientUseCase
  + GetAllAsync(GetAllPatientRequest request): Task<IActionResult>
}

class GetAllPatientRequest {
  + Page: int
  + Size: int
  + Name: string
  + PhoneNumber: string
  + OrderDesc: bool
  + OrderDesc: string
}
class ListPatientDto{
+ Id: int
+ Name: string
+ Email: string
+ Phone: string
+ BirthDay: Date
}



IPatientRepository <|.. PatientRepository
IPatientRepository <.. GetAllPatientUseCase
IValidator <|.. GetAllPatientValidator
IValidator <.. GetAllPatientUseCase


GetAllPatientUseCase ..> GetAllPatientRequest
PatientController ..> GetAllPatientUseCase
PatientController ..> GetAllPatientRequest
GetAllPatientUseCase ..> ListPatientDto
@enduml
