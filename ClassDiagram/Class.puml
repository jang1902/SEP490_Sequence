@startuml


class Patient {
  + Name string?
  + Email string?
  + Password string?
  + Phone string?
  + Birthday DateTime?
  + IsUseGenPassword bool
  + Schedules ICollection<Schedule>
  + Records ICollection<Record>
}




enum StatusScheduleEnum
{
    Pending
    Confirmed
    Done
    Cancel
}

abstract class  BaseEntity<TId>{
+ Id: TId
+ CreateAt: DateTime
+ UpdateAt: DateTime
+ CreateBy: int
+ UpdateBy: int
}
class User                {
  + Name string
    + Email string
    + Password string
    + Phone string
    + Birthday DateTime
    +Salary double
    +Status StatusEnum
    +AssistantId int
    + IsUseGenPassword bool
    + UserRoles  ICollection<UserRole>
    + Schedules ICollection<Schedule>
    +Records ICollection<Record>
    +Applications ICollection<Applications>
}

User "1" o-- "many" Schedule
User "1" o-- "many" Record
User "1" o-- "many" UserRole
User "1" o-- "many" Applications

BaseEntity <|-- User

@enduml
