@startuml
interface ISupplierRepository{
 FindSupplierByPhoneAndMailAsync(string phone, string email): List<Supplier>
}
interface IValidator<T>

class SupplierRepository {
 FindSupplierByPhoneAndMailAsync(string phone, string email): List<Supplier>
}

class CreateSupplierUseCase {
  - _supplierRepository: ISupplierRepository
  - _validator: IValidator<CreateSupplierRequest>
  - _unitOfWork: IUnitOfWork
  + ExecuteAsync(CreateSupplierRequest request): Task<ApiResponse<Supplier, List<string>>>
}

class CreateSupplierValidator {
  + CreateSupplierValidator()
}

class PatientController {
  - _createSupplier: CreateSupplierUseCase
  + CreateSupplier(CreateSupplierRequest request): Task<IActionResult>
}

class CreateSupplierRequest {
  + Page: int
  + Size: int
  + Name: string
  + PhoneNumber: string
  + OrderDesc: bool
  + OrderDesc: string
}


ISupplierRepository <|.. SupplierRepository
CreateSupplierUseCase ..> ISupplierRepository
IValidator <|.. CreateSupplierValidator
IValidator <.. CreateSupplierUseCase


CreateSupplierUseCase ..> CreateSupplierRequest
PatientController ..> CreateSupplierUseCase
PatientController ..> CreateSupplierRequest
@enduml
